import{jsx as _jsx}from"react/jsx-runtime";import{useState,useEffect,Children}from"react";import{EVENTS}from"./events";import{match}from"path-to-regexp";import{getCurrentPath}from"./utils";export default function Router({children,routes=[],defaultComponent:DefaultComponent=()=>null}){const[currentPath,setCurrentPath]=useState(getCurrentPath());useEffect(()=>{const onLocationChange=()=>{setCurrentPath(getCurrentPath())};window.addEventListener(EVENTS.NAVIGATION_EVENT,onLocationChange);window.addEventListener(EVENTS.POPSTATE,onLocationChange);return()=>{window.removeEventListener(EVENTS.NAVIGATION_EVENT,onLocationChange);window.removeEventListener(EVENTS.POPSTATE,onLocationChange)}},[]);const routeFromChildren=Children.map(children,child=>{const{props,type}=child;const{name}=type;const isRoute=name==="Route";return isRoute?props:null});const routesToUse=routes.concat(routeFromChildren).filter(Boolean);let routeParams={};const Page=routesToUse.find(({path})=>{if(path===currentPath)return true;const matchUrl=match(path,{decode:decodeURIComponent});const matched=matchUrl(currentPath);if(!matched)return false;routeParams=matched.params;return true})?.Component;return Page?_jsx(Page,{routeParams:routeParams}):_jsx(DefaultComponent,{routeParams:routeParams})}